---
const { src, label = "View Photo" } = Astro.props;
---
<style>
.lightbox-overlay{
  position:fixed; inset:0; background:rgba(0,0,0,.85);
  display:flex; align-items:center; justify-content:center;
  z-index:9999; visibility:hidden; opacity:0; transition:opacity .25s ease;
}
.lightbox-overlay.active{ visibility:visible; opacity:1; }
.lightbox-overlay img{
  max-width:90%; max-height:80%;
  border-radius:10px; box-shadow:0 8px 28px rgba(0,0,0,.5);
}
.lightbox-close{
  position:absolute; top:16px; right:22px; background:#fff; border:0;
  width:36px; height:36px; border-radius:999px; font-size:18px; cursor:pointer;
}
.btn{ background:var(--accent,#7dd3fc); color:#0b0c10; padding:8px 14px;
  border-radius:10px; border:1px solid #1f2430; cursor:pointer; }
</style>

<div class="lb-root">
  <!-- Trigger button -->
  <button type="button" class="btn lb-trigger">{label}</button>

  <div class="lightbox-overlay" aria-hidden="true">
    <button class="lightbox-close" aria-label="Close">âœ•</button>
    <img src={src} alt="proof" />
  </div>

  <!-- Scoped script -->
  <script is:inline>
    {
      const root = document.currentScript.parentElement;
      const trigger = root.querySelector('.lb-trigger');
      const overlay = root.querySelector('.lightbox-overlay');
      const closeBtn = root.querySelector('.lightbox-close');

      const open = () => {
        overlay.classList.add('active');
        overlay.setAttribute('aria-hidden','false');
      };
      const close = () => {
        overlay.classList.remove('active');
        overlay.setAttribute('aria-hidden','true');
      };

      trigger.addEventListener('click', open);
      closeBtn.addEventListener('click', close);
      overlay.addEventListener('click', (e) => { if (e.target === overlay) close(); });
      document.addEventListener('keydown', (e) => { if (e.key === 'Escape') close(); });
    }
  </script>
</div>